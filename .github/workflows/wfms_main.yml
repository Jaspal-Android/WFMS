# Android CI/CD Pipeline
name: Android CI/CD

# Controls when the workflow will run
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
  workflow_dispatch:

# Environment variables
env:
  JAVA_VERSION: '17'
  ANDROID_SDK_TOOLS: '10406996'
  GRADLE_OPTS: '-Dorg.gradle.jvmargs=-Xmx4g -XX:+HeapDumpOnOutOfMemoryError'

# Permissions for security
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  # Job for code quality checks
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: ${{ env.ANDROID_SDK_TOOLS }}

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses || true

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Create local.properties
        run: echo "sdk.dir=/home/runner/Library/Android/sdk" > local.properties

      - name: Enable detailed deprecation warnings
        run: echo -e "\norg.gradle.warning.mode=all" >> gradle.properties

      - name: Run Lint
        run: |
          ./gradlew lintAnalyzeDevDebug
          ./gradlew lintAnalyzeBetaDebug
          ./gradlew lintAnalyzeProdDebug

      - name: Upload Lint Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results*.html
          retention-days: 7

  # Job for unit tests
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Create local.properties
        run: echo "sdk.dir=/home/runner/Library/Android/sdk" > local.properties

      - name: Enable detailed deprecation warnings
        run: echo -e "\norg.gradle.warning.mode=all" >> gradle.properties

      - name: Run Unit Tests
        run: |
          ./gradlew testDevDebugUnitTest
          ./gradlew testBetaDebugUnitTest
          ./gradlew testProdDebugUnitTest

      - name: Upload Unit Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: app/build/reports/tests/test*UnitTest/
          retention-days: 7

      - name: Publish Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Unit Test Results
          path: app/build/test-results/test*UnitTest/TEST-*.xml
          reporter: java-junit
          fail-on-error: false

  # Job for building APKs
  build:
    name: Build APKs
    runs-on: ubuntu-latest
    needs: [unit-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: ${{ env.ANDROID_SDK_TOOLS }}

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses || true

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Create local.properties
        run: echo "sdk.dir=/home/runner/Library/Android/sdk" > local.properties

      - name: Enable detailed deprecation warnings
        run: echo -e "\norg.gradle.warning.mode=all" >> gradle.properties

      - name: Build Debug APKs
        run: |
          ./gradlew assembleDevDebug
          ./gradlew assembleBetaDebug
          ./gradlew assembleProdDebug

      - name: Upload Debug APKs
        uses: actions/upload-artifact@v4
        with:
          name: debug-apks
          path: app/build/outputs/apk/*/debug/*.apk
          retention-days: 7

      - name: Decode Keystore
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > keystore.jks
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}

      - name: Build Release APKs
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          ./gradlew assembleDevRelease
          ./gradlew assembleBetaRelease
          ./gradlew assembleProdRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}

      - name: Upload Release APKs
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: release-apks
          path: app/build/outputs/apk/*/release/*.apk
          retention-days: 30
          if-no-files-found: error
